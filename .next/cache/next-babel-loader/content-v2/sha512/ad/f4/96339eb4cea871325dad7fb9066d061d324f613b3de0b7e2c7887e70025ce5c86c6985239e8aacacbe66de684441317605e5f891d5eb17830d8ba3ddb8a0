{"ast":null,"code":"import _defineProperty from \"/Users/matteosacchi/Dropbox/Il mio Mac (MBP-di-Matteo-3.home)/Documents/GitHub/react-portfolio/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/matteosacchi/Dropbox/Il mio Mac (MBP-di-Matteo-3.home)/Documents/GitHub/react-portfolio/components/swiper.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect, useRef } from \"react\";\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y, Mousewheel, EffectFade } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nSwiperCore.use([Navigation, Pagination, A11y, Mousewheel, EffectFade]);\nimport { gsap } from \"gsap\";\nimport { SplitText } from \"gsap/dist/SplitText\";\nexport default function Slideshow(_ref) {\n  _s();\n\n  var _this = this;\n\n  var project = _ref.project;\n  var titleRefs = useRef([]);\n  titleRefs.current = [];\n\n  var addToRefs = function addToRefs(el) {\n    if (el && !titleRefs.current.includes(el)) {\n      titleRefs.current.push(el);\n    }\n  };\n\n  var animateTextIn = function animateTextIn() {\n    titleRefs.current.forEach(function (item, i) {\n      if (item.classList.contains(\"active\")) {\n        gsap.to(item, 1, {\n          opacity: 1\n        });\n      } else {\n        gsap.to(item, 1, {\n          opacity: 0\n        });\n      }\n    });\n  };\n\n  var animateTextOut = function animateTextOut() {\n    titleRefs.current.forEach(function (item, i) {\n      if (item.classList.contains(\"active\")) {\n        gsap.set(item, {\n          opacity: 0\n        });\n      }\n    });\n  };\n\n  var params = {\n    container: \".container\",\n    pagination: \".swiper-pagination\",\n    direction: \"vertical\",\n    mousewheel: {\n      sensitivity: 5\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Swiper, _objectSpread(_objectSpread({\n    effect: \"fade\"\n  }, params), {}, {\n    slidesPerView: 1,\n    pagination: {\n      clickable: true\n    },\n    onSwiper: function onSwiper(swiper) {\n      return animateTextIn();\n    },\n    onTransitionEnd: function onTransitionEnd() {\n      return animateTextIn();\n    },\n    OnslideChange: function OnslideChange() {\n      return animateTextOut();\n    },\n    children: project.map(function (item) {\n      return /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: function children(_ref2) {\n          var isActive = _ref2.isActive;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slide-inner\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              ref: addToRefs,\n              className: \"title \" + (isActive ? 'active' : ''),\n              children: item.fields.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }, _this);\n    })\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Slideshow, \"H3BW+lPtqv8Ya0QZipyN3oLXe+4=\");\n\n_c = Slideshow;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slideshow\");","map":{"version":3,"sources":["/Users/matteosacchi/Dropbox/Il mio Mac (MBP-di-Matteo-3.home)/Documents/GitHub/react-portfolio/components/swiper.js"],"names":["useState","useEffect","useRef","SwiperCore","Navigation","Pagination","Scrollbar","A11y","Mousewheel","EffectFade","Swiper","SwiperSlide","use","gsap","SplitText","Slideshow","project","titleRefs","current","addToRefs","el","includes","push","animateTextIn","forEach","item","i","classList","contains","to","opacity","animateTextOut","set","params","container","pagination","direction","mousewheel","sensitivity","clickable","swiper","map","isActive","fields","title"],"mappings":"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","sourcesContent":["import {useState, useEffect, useRef } from \"react\";\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y, Mousewheel, EffectFade } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\nSwiperCore.use([Navigation, Pagination, A11y, Mousewheel, EffectFade]);\n\nimport { gsap } from \"gsap\";\nimport { SplitText } from \"gsap/dist/SplitText\";\n\n\nexport default function Slideshow({project}) {\n\n\n  let titleRefs = useRef([]);\n  titleRefs.current = [];\n\n   const addToRefs = (el) =>{\n     if(el && !titleRefs.current.includes(el)){\n       titleRefs.current.push(el);\n     }\n   }\n\n\n  const animateTextIn = () => {\n    titleRefs.current.forEach((item, i) => {\n      if(item.classList.contains(\"active\"))\n      {\n         gsap.to(item,1,{opacity: 1})\n      }\n      else{\n        gsap.to(item,1,{opacity: 0})\n      }\n    });\n  };\n  const animateTextOut = () => {\n    titleRefs.current.forEach((item, i) => {\n      if(item.classList.contains(\"active\"))\n      {\n         gsap.set(item,{opacity: 0})\n      }\n    });\n  };\n\n\n  const params = {\n    container: \".container\",\n    pagination: \".swiper-pagination\",\n    direction: \"vertical\",\n    mousewheel: {\n      sensitivity: 5,\n    }\n  };\n\n\n  return (\n    <Swiper effect=\"fade\" {...params}\n      slidesPerView={1}\n      pagination={{ clickable: true }}\n      onSwiper={(swiper) => animateTextIn()}\n      onTransitionEnd={() => animateTextIn()}\n      OnslideChange={() => animateTextOut()}\n    >\n        {project.map((item) => {\n            return (\n              <SwiperSlide >\n               {({ isActive }) => (\n              <div className=\"slide-inner\">\n                <h1 ref={addToRefs} className={\"title \" + (isActive ? 'active' : '')}\n                 >{item.fields.title}\n                 </h1>\n              </div>\n              )}\n            </SwiperSlide>\n            )\n          })\n        }\n    </Swiper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}