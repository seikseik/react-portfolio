{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/matteosacchi/Dropbox/Il mio Mac (MBP-di-Matteo-3.home)/Documents/GitHub/react-portfolio/components/project.js\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\nimport { gsap } from \"gsap\";\nexport default function Project(_ref) {\n  var _this = this;\n\n  var forwardedRef = _ref.forwardedRef,\n      currentProj = _ref.currentProj,\n      projects = _ref.projects;\n  console.log(projects);\n  var current = projects.map(function (item) {\n    if (item.sys.id == currentProj) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: forwardedRef,\n        className: \"project-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: item.fields.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 15\n          }, _this), documentToReactComponents(item.fields.content1), documentToReactComponents(item.fields.credits)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-container\",\n            children: item.fields.gallery.map(function (el) {\n              if (el.fields.file.contentType == \"image/png\" || el.fields.file.contentType == \"image/jpg\") {\n                return /*#__PURE__*/_jsxDEV(LazyLoadImage, {\n                  alt: \"\",\n                  effect: \"blur\",\n                  src: \"http:\" + el.fields.file.url\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 25,\n                  columnNumber: 25\n                }, _this);\n              }\n\n              if (el.fields.file.contentType == \"video/mp4\") {\n                return /*#__PURE__*/_jsxDEV(\"video\", {\n                  width: \"320\",\n                  height: \"240\",\n                  controls: true,\n                  src: \"http:\" + el.fields.file.url,\n                  type: \"video/mp4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 25\n                }, _this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, _this)]\n      }, item.sys.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, _this);\n    }\n  });\n\n  if (currentProj != null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"side-content-project\",\n      children: [\" \", current]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n}\n_c = Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"sources":["/Users/matteosacchi/Dropbox/Il mio Mac (MBP-di-Matteo-3.home)/Documents/GitHub/react-portfolio/components/project.js"],"names":["useState","useEffect","useRef","documentToReactComponents","LazyLoadImage","gsap","Project","forwardedRef","currentProj","projects","console","log","current","map","item","sys","id","fields","title","content1","credits","gallery","el","file","contentType","url"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,EAA6BC,MAA7B,QAA2C,OAA3C;AACA,SAASC,yBAAT,QAA0C,sCAA1C;AACA,SAASC,aAAT,QAA8B,iCAA9B;AACA,OAAO,sDAAP;AACA,SAASC,IAAT,QAAqB,MAArB;AAGA,eAAe,SAASC,OAAT,OAAyD;AAAA;;AAAA,MAAtCC,YAAsC,QAAtCA,YAAsC;AAAA,MAAxBC,WAAwB,QAAxBA,WAAwB;AAAA,MAAXC,QAAW,QAAXA,QAAW;AACtEC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,MAAMG,OAAO,GAAGH,QAAQ,CAACI,GAAT,CAAa,UAACC,IAAD,EAAU;AACrC,QAAGA,IAAI,CAACC,GAAL,CAASC,EAAT,IAAeR,WAAlB,EAA8B;AAC5B,0BACE;AAAuB,QAAA,GAAG,EAAED,YAA5B;AAA0C,QAAA,SAAS,EAAC,mBAApD;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACE;AAAA,sBAAKO,IAAI,CAACG,MAAL,CAAYC;AAAjB;AAAA;AAAA;AAAA;AAAA,mBADF,EAEGf,yBAAyB,CAACW,IAAI,CAACG,MAAL,CAAYE,QAAb,CAF5B,EAGGhB,yBAAyB,CAACW,IAAI,CAACG,MAAL,CAAYG,OAAb,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAMI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,sBAEIN,IAAI,CAACG,MAAL,CAAYI,OAAZ,CAAoBR,GAApB,CAAwB,UAACS,EAAD,EAAQ;AAC9B,kBAAGA,EAAE,CAACL,MAAH,CAAUM,IAAV,CAAeC,WAAf,IAA8B,WAA9B,IAA6CF,EAAE,CAACL,MAAH,CAAUM,IAAV,CAAeC,WAAf,IAA8B,WAA9E,EAA2F;AACzF,oCACE,QAAC,aAAD;AACC,kBAAA,GAAG,EAAC,EADL;AAEC,kBAAA,MAAM,EAAC,MAFR;AAGC,kBAAA,GAAG,EAAE,UAAQF,EAAE,CAACL,MAAH,CAAUM,IAAV,CAAeE;AAH7B;AAAA;AAAA;AAAA;AAAA,yBADF;AAMD;;AACD,kBAAGH,EAAE,CAACL,MAAH,CAAUM,IAAV,CAAeC,WAAf,IAA8B,WAAjC,EAA6C;AAC3C,oCACE;AAAO,kBAAA,KAAK,EAAC,KAAb;AAAmB,kBAAA,MAAM,EAAC,KAA1B;AAAgC,kBAAA,QAAQ,MAAxC;AAAyC,kBAAA,GAAG,EAAE,UAAQF,EAAE,CAACL,MAAH,CAAUM,IAAV,CAAeE,GAArE;AAA0E,kBAAA,IAAI,EAAC;AAA/E;AAAA;AAAA;AAAA;AAAA,yBADF;AAID;AAEF,aAhBD;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBANJ;AAAA,SAAUX,IAAI,CAACC,GAAL,CAASC,EAAnB;AAAA;AAAA;AAAA;AAAA,eADF;AAiCD;AACF,GApCe,CAAhB;;AAqCA,MAAGR,WAAW,IAAI,IAAlB,EAAuB;AACrB,wBACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,sBAAwCI,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,GAJD,MAIK;AACH,WAAO,IAAP;AACD;AAEF;KA/CuBN,O","sourcesContent":["import {useState, useEffect, useRef } from \"react\";\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\nimport { gsap } from \"gsap\";\n\n\nexport default function Project({ forwardedRef, currentProj, projects}) {\n  console.log(projects);\n  const current = projects.map((item) => {\n    if(item.sys.id == currentProj){\n      return(\n        <div key={item.sys.id} ref={forwardedRef} className=\"project-container\">\n            <div className=\"left-col\">\n              <h1>{item.fields.title}</h1>\n              {documentToReactComponents(item.fields.content1)}\n              {documentToReactComponents(item.fields.credits)}\n            </div>\n            <div className=\"right-col\">\n              <div className=\"image-container\">\n                {\n                  item.fields.gallery.map((el) => {\n                    if(el.fields.file.contentType == \"image/png\" || el.fields.file.contentType == \"image/jpg\" ){\n                      return(\n                        <LazyLoadImage\n                         alt=\"\"\n                         effect=\"blur\"\n                         src={\"http:\"+el.fields.file.url} />\n                      )\n                    }\n                    if(el.fields.file.contentType == \"video/mp4\"){\n                      return(\n                        <video width=\"320\" height=\"240\" controls src={\"http:\"+el.fields.file.url} type=\"video/mp4\">\n                        </video>\n                      )\n                    }\n\n                  })\n                }\n              </div>\n            </div>\n\n        </div>\n      )\n    }\n  })\n  if(currentProj != null){\n    return (\n      <div className=\"side-content-project\"> {current}</div>\n    )\n  }else{\n    return null\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}