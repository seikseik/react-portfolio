{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/matteosacchi/Dropbox/Il mio Mac (MBP-di-Matteo-3.home)/Documents/GitHub/react-portfolio/components/swiper.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect, useRef } from \"react\";\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y, Mousewheel, EffectFade } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nSwiperCore.use([Navigation, Pagination, A11y, Mousewheel, EffectFade]);\nimport { gsap } from \"gsap\";\nimport { SplitText } from \"gsap/dist/SplitText\";\nexport default function Slideshow({\n  project,\n  addToslideShowRef,\n  changeCoord,\n  load,\n  forwardedRef,\n  changeProject,\n  projNavRef,\n  changeProjectFromNav\n}) {\n  let titleRefs = useRef([]);\n  titleRefs.current = [];\n  let currentProj = useRef(null);\n\n  const addToRefs = el => {\n    if (el && !titleRefs.current.includes(el)) {\n      titleRefs.current.push(el);\n    }\n  };\n\n  useEffect(() => {\n    if (load) {\n      initAnimation();\n    }\n  }, [load]);\n\n  const textAnimation = (item, del) => {\n    let tl = gsap.timeline(),\n        mySplitText = new SplitText(item, {\n      type: \"words,chars\",\n      wordsClass: \"split-line\"\n    }),\n        chars = mySplitText.chars;\n    gsap.set(item, {\n      perspective: 400\n    });\n    tl.fromTo(chars, {\n      autoAlpha: 0\n    }, {\n      duration: 1,\n      autoAlpha: 1,\n      ease: \"circ.out\",\n      stagger: 0.03,\n      delay: del\n    }, \"+=0\");\n  };\n\n  const startAnimationNext = () => {\n    titleRefs.current.forEach((item, i) => {\n      if (item.classList.contains(\"active\")) {\n        textAnimation(item, 0);\n      }\n    });\n  };\n\n  const startAnimationPrev = () => {\n    titleRefs.current.forEach((item, i) => {\n      if (item.classList.contains(\"active\")) {\n        textAnimation(item, 0);\n      }\n    });\n  };\n\n  const initAnimation = () => {\n    let item = titleRefs.current[0];\n    textAnimation(item, 0.2);\n  };\n\n  const params = {\n    container: \".container\",\n    pagination: \".swiper-pagination\",\n    direction: \"vertical\",\n    slidesPerView: 1,\n    centeredSlides: true,\n    speed: 1000,\n    effect: \"fade\",\n    fadeEffect: {\n      crossFade: true\n    },\n    mousewheel: {\n      sensitivity: 6\n    },\n    watchSlidesProgress: true,\n    keyboard: true,\n    grabCursor: true\n  };\n\n  const projNavigation = () => {\n    changeProjectFromNav(currentProj.current.id);\n    console.log(currentProj.current.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: forwardedRef,\n    className: \"slider-custom-cont\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: projNavRef,\n      className: \"project-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => projNavigation(),\n        className: \"prevProj\",\n        children: \"PREV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => projNavigation(),\n        className: \"nextProj\",\n        children: \"NEXT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Swiper, _objectSpread(_objectSpread({}, params), {}, {\n      navigation: {\n        prevEl: \".prevProj\",\n        nextEl: \".nextProj\"\n      },\n      pagination: {\n        clickable: true\n      },\n      onSlideNextTransitionStart: () => startAnimationNext(),\n      onSlidePrevTransitionStart: () => startAnimationPrev(),\n      onSlideChangeTransitionStart: () => changeCoord(),\n      children: project.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          children: ({\n            isActive\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: addToslideShowRef,\n            className: \"slide-inner \" + (isActive ? 'active' : ''),\n            lat: item.fields.lat,\n            lon: item.fields.lon,\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              ref: addToRefs,\n              className: \"title \" + (isActive ? 'active' : ''),\n              children: item.fields.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), item.fields.subtitle ? /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: item.fields.subtitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 44\n            }, this) : '', item.fields.subtitle ? /*#__PURE__*/_jsxDEV(\"span\", {\n              ref: currentProj,\n              id: item.sys.id,\n              className: \"index-btn\",\n              \"data-attr\": item.fields.subtitle,\n              onClick: () => changeProject(item.sys.id),\n              children: \" See the project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 44\n            }, this) : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)\n        }, item.sys.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this);\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/matteosacchi/Dropbox/Il mio Mac (MBP-di-Matteo-3.home)/Documents/GitHub/react-portfolio/components/swiper.js"],"names":["useState","useEffect","useRef","SwiperCore","Navigation","Pagination","Scrollbar","A11y","Mousewheel","EffectFade","Swiper","SwiperSlide","use","gsap","SplitText","Slideshow","project","addToslideShowRef","changeCoord","load","forwardedRef","changeProject","projNavRef","changeProjectFromNav","titleRefs","current","currentProj","addToRefs","el","includes","push","initAnimation","textAnimation","item","del","tl","timeline","mySplitText","type","wordsClass","chars","set","perspective","fromTo","autoAlpha","duration","ease","stagger","delay","startAnimationNext","forEach","i","classList","contains","startAnimationPrev","params","container","pagination","direction","slidesPerView","centeredSlides","speed","effect","fadeEffect","crossFade","mousewheel","sensitivity","watchSlidesProgress","keyboard","grabCursor","projNavigation","id","console","log","prevEl","nextEl","clickable","map","index","isActive","fields","lat","lon","title","subtitle","sys"],"mappings":";;;;;;;;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,EAA6BC,MAA7B,QAA2C,OAA3C;AACA,OAAOC,UAAP,IAAqBC,UAArB,EAAiCC,UAAjC,EAA6CC,SAA7C,EAAwDC,IAAxD,EAA8DC,UAA9D,EAA0EC,UAA1E,QAA4F,QAA5F;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,cAApC;AAEAR,UAAU,CAACS,GAAX,CAAe,CAACR,UAAD,EAAaC,UAAb,EAAyBE,IAAzB,EAA+BC,UAA/B,EAA2CC,UAA3C,CAAf;AAEA,SAASI,IAAT,QAAqB,MAArB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,eAAe,SAASC,SAAT,CAAmB;AAACC,EAAAA,OAAD;AAAUC,EAAAA,iBAAV;AAA6BC,EAAAA,WAA7B;AAA0CC,EAAAA,IAA1C;AAAgDC,EAAAA,YAAhD;AAA8DC,EAAAA,aAA9D;AAA6EC,EAAAA,UAA7E;AAAyFC,EAAAA;AAAzF,CAAnB,EAAmI;AAElJ,MAAIC,SAAS,GAAGtB,MAAM,CAAC,EAAD,CAAtB;AACEsB,EAAAA,SAAS,CAACC,OAAV,GAAoB,EAApB;AAEF,MAAIC,WAAW,GAAGxB,MAAM,CAAC,IAAD,CAAxB;;AACA,QAAMyB,SAAS,GAAIC,EAAD,IAAO;AACpB,QAAGA,EAAE,IAAI,CAACJ,SAAS,CAACC,OAAV,CAAkBI,QAAlB,CAA2BD,EAA3B,CAAV,EAAyC;AACvCJ,MAAAA,SAAS,CAACC,OAAV,CAAkBK,IAAlB,CAAuBF,EAAvB;AACD;AACF,GAJJ;;AAMA3B,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGkB,IAAH,EAAQ;AACNY,MAAAA,aAAa;AACd;AACJ,GAJQ,EAIN,CAACZ,IAAD,CAJM,CAAT;;AAMA,QAAMa,aAAa,GAAG,CAACC,IAAD,EAAOC,GAAP,KAAc;AAClC,QAAIC,EAAE,GAAGtB,IAAI,CAACuB,QAAL,EAAT;AAAA,QACIC,WAAW,GAAG,IAAIvB,SAAJ,CAAcmB,IAAd,EAAoB;AAACK,MAAAA,IAAI,EAAC,aAAN;AAAqBC,MAAAA,UAAU,EAAE;AAAjC,KAApB,CADlB;AAAA,QAGEC,KAAK,GAAGH,WAAW,CAACG,KAHtB;AAIE3B,IAAAA,IAAI,CAAC4B,GAAL,CAASR,IAAT,EAAe;AAACS,MAAAA,WAAW,EAAE;AAAd,KAAf;AAEFP,IAAAA,EAAE,CAACQ,MAAH,CAAUH,KAAV,EAAiB;AAACI,MAAAA,SAAS,EAAE;AAAZ,KAAjB,EACE;AAAGC,MAAAA,QAAQ,EAAE,CAAb;AACKD,MAAAA,SAAS,EAAE,CADhB;AAEKE,MAAAA,IAAI,EAAE,UAFX;AAGKC,MAAAA,OAAO,EAAE,IAHd;AAIKC,MAAAA,KAAK,EAAEd;AAJZ,KADF,EAOE,KAPF;AAQD,GAfD;;AAiBA,QAAMe,kBAAkB,GAAG,MAAK;AAC5BzB,IAAAA,SAAS,CAACC,OAAV,CAAkByB,OAAlB,CAA0B,CAACjB,IAAD,EAAOkB,CAAP,KAAa;AACrC,UAAGlB,IAAI,CAACmB,SAAL,CAAeC,QAAf,CAAwB,QAAxB,CAAH,EAAqC;AACrCrB,QAAAA,aAAa,CAACC,IAAD,EAAO,CAAP,CAAb;AACC;AACF,KAJD;AAKD,GANH;;AAQA,QAAMqB,kBAAkB,GAAG,MAAK;AAC5B9B,IAAAA,SAAS,CAACC,OAAV,CAAkByB,OAAlB,CAA0B,CAACjB,IAAD,EAAOkB,CAAP,KAAa;AACrC,UAAGlB,IAAI,CAACmB,SAAL,CAAeC,QAAf,CAAwB,QAAxB,CAAH,EAAqC;AACrCrB,QAAAA,aAAa,CAACC,IAAD,EAAO,CAAP,CAAb;AACC;AACF,KAJD;AAKD,GANH;;AAQA,QAAMF,aAAa,GAAG,MAAK;AACvB,QAAIE,IAAI,GAAGT,SAAS,CAACC,OAAV,CAAkB,CAAlB,CAAX;AACAO,IAAAA,aAAa,CAACC,IAAD,EAAO,GAAP,CAAb;AACD,GAHH;;AAKA,QAAMsB,MAAM,GAAG;AACXC,IAAAA,SAAS,EAAE,YADA;AAEXC,IAAAA,UAAU,EAAE,oBAFD;AAGXC,IAAAA,SAAS,EAAE,UAHA;AAIXC,IAAAA,aAAa,EAAE,CAJJ;AAKXC,IAAAA,cAAc,EAAE,IALL;AAMXC,IAAAA,KAAK,EAAE,IANI;AAOXC,IAAAA,MAAM,EAAE,MAPG;AAQXC,IAAAA,UAAU,EAAE;AACVC,MAAAA,SAAS,EAAE;AADD,KARD;AAWXC,IAAAA,UAAU,EAAE;AACVC,MAAAA,WAAW,EAAE;AADH,KAXD;AAcXC,IAAAA,mBAAmB,EAAE,IAdV;AAeXC,IAAAA,QAAQ,EAAE,IAfC;AAgBXC,IAAAA,UAAU,EAAE;AAhBD,GAAf;;AAmBA,QAAMC,cAAc,GAAC,MAAI;AACvB/C,IAAAA,oBAAoB,CAACG,WAAW,CAACD,OAAZ,CAAoB8C,EAArB,CAApB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY/C,WAAW,CAACD,OAAZ,CAAoB8C,EAAhC;AACD,GAHD;;AAKE,sBACE;AAAK,IAAA,GAAG,EAAEnD,YAAV;AAAwB,IAAA,SAAS,EAAC,oBAAlC;AAAA,4BACA;AAAK,MAAA,GAAG,EAAEE,UAAV;AAAsB,MAAA,SAAS,EAAC,oBAAhC;AAAA,8BACE;AAAM,QAAA,OAAO,EAAE,MAAMgD,cAAc,EAAnC;AAAuC,QAAA,SAAS,EAAC,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,OAAO,EAAE,MAAMA,cAAc,EAAnC;AAAuC,QAAA,SAAS,EAAC,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAMA,QAAC,MAAD,kCAAYf,MAAZ;AACE,MAAA,UAAU,EAAE;AACRmB,QAAAA,MAAM,EAAE,WADA;AAERC,QAAAA,MAAM,EAAE;AAFA,OADd;AAKE,MAAA,UAAU,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OALd;AAME,MAAA,0BAA0B,EAAE,MAAM3B,kBAAkB,EANtD;AAOE,MAAA,0BAA0B,EAAE,MAAMK,kBAAkB,EAPtD;AAQE,MAAA,4BAA4B,EAAE,MAAMpC,WAAW,EARjD;AAAA,gBAUKF,OAAO,CAAC6D,GAAR,CAAY,CAAC5C,IAAD,EAAO6C,KAAP,KAAiB;AAC1B,4BACE,QAAC,WAAD;AAAA,oBACE,CAAC;AAAEC,YAAAA;AAAF,WAAD,kBAEA;AAAK,YAAA,GAAG,EAAE9D,iBAAV;AAA6B,YAAA,SAAS,EAAE,kBAAkB8D,QAAQ,GAAG,QAAH,GAAc,EAAxC,CAAxC;AAAqF,YAAA,GAAG,EAAE9C,IAAI,CAAC+C,MAAL,CAAYC,GAAtG;AAA2G,YAAA,GAAG,EAAEhD,IAAI,CAAC+C,MAAL,CAAYE,GAA5H;AAAA,oCACA;AACG,cAAA,GAAG,EAAEvD,SADR;AAEG,cAAA,SAAS,EAAE,YAAYoD,QAAQ,GAAG,QAAH,GAAc,EAAlC,CAFd;AAAA,wBAIE9C,IAAI,CAAC+C,MAAL,CAAYG;AAJd;AAAA;AAAA;AAAA;AAAA,oBADA,EAQElD,IAAI,CAAC+C,MAAL,CAAYI,QAAZ,gBAAyB;AAAA,wBAAKnD,IAAI,CAAC+C,MAAL,CAAYI;AAAjB;AAAA;AAAA;AAAA;AAAA,oBAAzB,GAA2D,EAR7D,EAUGnD,IAAI,CAAC+C,MAAL,CAAYI,QAAZ,gBAAwB;AAAM,cAAA,GAAG,EAAE1D,WAAX;AAAwB,cAAA,EAAE,EAAEO,IAAI,CAACoD,GAAL,CAASd,EAArC;AAAyC,cAAA,SAAS,EAAC,WAAnD;AAA+D,2BAAWtC,IAAI,CAAC+C,MAAL,CAAYI,QAAtF;AAAgG,cAAA,OAAO,EAAE,MAAI/D,aAAa,CAACY,IAAI,CAACoD,GAAL,CAASd,EAAV,CAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAxB,GAA2L,EAV9L;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF,WAAkBtC,IAAI,CAACoD,GAAL,CAASd,EAA3B;AAAA;AAAA;AAAA;AAAA,gBADF;AAmBD,OApBF;AAVL;AAAA;AAAA;AAAA;AAAA,YANA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD","sourcesContent":["import {useState, useEffect, useRef } from \"react\";\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y, Mousewheel, EffectFade } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\nSwiperCore.use([Navigation, Pagination, A11y, Mousewheel, EffectFade]);\n\nimport { gsap } from \"gsap\";\nimport { SplitText } from \"gsap/dist/SplitText\";\n\nexport default function Slideshow({project, addToslideShowRef, changeCoord, load, forwardedRef, changeProject, projNavRef, changeProjectFromNav}) {\n\nlet titleRefs = useRef([]);\n  titleRefs.current = [];\n\nlet currentProj = useRef(null);\nconst addToRefs = (el) =>{\n     if(el && !titleRefs.current.includes(el)){\n       titleRefs.current.push(el);\n     }\n   }\n\nuseEffect(()=>{\n    if(load){\n      initAnimation();\n    }\n}, [load])\n\nconst textAnimation = (item, del) =>{\n  let tl = gsap.timeline(),\n      mySplitText = new SplitText(item, {type:\"words,chars\", wordsClass: \"split-line\"\n    }),\n    chars = mySplitText.chars;\n    gsap.set(item, {perspective: 400});\n\n  tl.fromTo(chars, {autoAlpha: 0},\n    {  duration: 1,\n         autoAlpha: 1,\n         ease: \"circ.out\",\n         stagger: 0.03,\n         delay: del\n    },\n    \"+=0\");\n}\n\nconst startAnimationNext = () =>{\n    titleRefs.current.forEach((item, i) => {\n      if(item.classList.contains(\"active\")){\n      textAnimation(item, 0);\n      }\n    });\n  }\n\nconst startAnimationPrev = () =>{\n    titleRefs.current.forEach((item, i) => {\n      if(item.classList.contains(\"active\")){\n      textAnimation(item, 0);\n      }\n    });\n  }\n\nconst initAnimation = () =>{\n    let item = titleRefs.current[0]\n    textAnimation(item, 0.2);\n  }\n\nconst params = {\n    container: \".container\",\n    pagination: \".swiper-pagination\",\n    direction: \"vertical\",\n    slidesPerView: 1,\n    centeredSlides: true,\n    speed: 1000,\n    effect: \"fade\",\n    fadeEffect: {\n      crossFade: true\n    },\n    mousewheel: {\n      sensitivity: 6,\n    },\n    watchSlidesProgress: true,\n    keyboard: true,\n    grabCursor: true,\n  };\n\nconst projNavigation=()=>{\n  changeProjectFromNav(currentProj.current.id);\n  console.log(currentProj.current.id)\n}\n\n  return (\n    <div ref={forwardedRef} className=\"slider-custom-cont\">\n    <div ref={projNavRef} className=\"project-navigation\">\n      <span onClick={() => projNavigation()} className=\"prevProj\">PREV</span>\n      <span onClick={() => projNavigation()} className=\"nextProj\">NEXT</span>\n    </div>\n\n    <Swiper {...params}\n      navigation={{\n          prevEl: \".prevProj\",\n          nextEl: \".nextProj\",\n        }}\n      pagination={{ clickable: true }}\n      onSlideNextTransitionStart={() => startAnimationNext()}\n      onSlidePrevTransitionStart={() => startAnimationPrev()}\n      onSlideChangeTransitionStart={() => changeCoord()}\n    >\n        {project.map((item, index) => {\n            return (\n              <SwiperSlide key={item.sys.id}>\n               {({ isActive }) => (\n\n                <div ref={addToslideShowRef} className={\"slide-inner \" + (isActive ? 'active' : '')} lat={item.fields.lat} lon={item.fields.lon}>\n                <h1\n                   ref={addToRefs}\n                   className={\"title \" + (isActive ? 'active' : '')}\n                 >\n                 {item.fields.title}\n                 </h1>\n\n                 {item.fields.subtitle ?   <h4>{item.fields.subtitle}</h4> : ''}\n\n                  {item.fields.subtitle ?  <span ref={currentProj} id={item.sys.id} className=\"index-btn\" data-attr={item.fields.subtitle} onClick={()=>changeProject(item.sys.id)}> See the project</span> : ''}\n              </div>\n              )}\n            </SwiperSlide>\n            )\n          })\n        }\n    </Swiper>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}