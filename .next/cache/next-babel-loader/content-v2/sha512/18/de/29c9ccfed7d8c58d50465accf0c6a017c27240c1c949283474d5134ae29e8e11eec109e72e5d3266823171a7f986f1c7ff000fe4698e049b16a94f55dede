{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/matteosacchi/Documents/GitHub/react-portfolio/components/pin.js\";\nimport * as React from 'react';\nimport { Marker } from 'react-map-gl';\nvar ICON = \"M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\\n  C20.1,15.8,20.2,15.8,20.2,15.7z\";\nvar SIZE = 20; // Important for perf: the markers never change, avoid rerender when the map viewport changes\n\nfunction Pins(props) {\n  var _this = this;\n\n  var data = props.data,\n      _onClick = props.onClick;\n  return data.map(function (city, index) {\n    return /*#__PURE__*/_jsxDEV(Marker, {\n      longitude: longitude,\n      latitude: latitude,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        height: SIZE,\n        viewBox: \"0 0 24 24\",\n        style: {\n          cursor: 'pointer',\n          fill: '#d00',\n          stroke: 'none',\n          transform: \"translate(\".concat(-SIZE / 2, \"px,\").concat(-SIZE, \"px)\")\n        },\n        onClick: function onClick() {\n          return _onClick(city);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: ICON\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, _this)\n    }, \"marker-\".concat(index), false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, _this);\n  });\n}\n\n_c = Pins;\nexport default _c2 = /*#__PURE__*/React.memo(Pins);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Pins\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/matteosacchi/Documents/GitHub/react-portfolio/components/pin.js"],"names":["React","Marker","ICON","SIZE","Pins","props","data","onClick","map","city","index","longitude","latitude","cursor","fill","stroke","transform","memo"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,MAAR,QAAqB,cAArB;AAEA,IAAMC,IAAI,4QAAV;AAIA,IAAMC,IAAI,GAAG,EAAb,C,CAEA;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAAA,MACZC,IADY,GACKD,KADL,CACZC,IADY;AAAA,MACNC,QADM,GACKF,KADL,CACNE,OADM;AAGnB,SAAOD,IAAI,CAACE,GAAL,CAAS,UAACC,IAAD,EAAOC,KAAP;AAAA,wBACd,QAAC,MAAD;AAAgC,MAAA,SAAS,EAAEC,SAA3C;AAAsD,MAAA,QAAQ,EAAEC,QAAhE;AAAA,6BACE;AACE,QAAA,MAAM,EAAET,IADV;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,KAAK,EAAE;AACLU,UAAAA,MAAM,EAAE,SADH;AAELC,UAAAA,IAAI,EAAE,MAFD;AAGLC,UAAAA,MAAM,EAAE,MAHH;AAILC,UAAAA,SAAS,sBAAe,CAACb,IAAD,GAAQ,CAAvB,gBAA8B,CAACA,IAA/B;AAJJ,SAHT;AASE,QAAA,OAAO,EAAE;AAAA,iBAAMI,QAAO,CAACE,IAAD,CAAb;AAAA,SATX;AAAA,+BAWE;AAAM,UAAA,CAAC,EAAEP;AAAT;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA;AADF,wBAAuBQ,KAAvB;AAAA;AAAA;AAAA;AAAA,aADc;AAAA,GAAT,CAAP;AAiBD;;KApBQN,I;AAsBT,kCAAeJ,KAAK,CAACiB,IAAN,CAAWb,IAAX,CAAf","sourcesContent":["import * as React from 'react';\nimport {Marker} from 'react-map-gl';\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\n\nconst SIZE = 20;\n\n// Important for perf: the markers never change, avoid rerender when the map viewport changes\nfunction Pins(props) {\n  const {data, onClick} = props;\n\n  return data.map((city, index) => (\n    <Marker key={`marker-${index}`} longitude={longitude} latitude={latitude}>\n      <svg\n        height={SIZE}\n        viewBox=\"0 0 24 24\"\n        style={{\n          cursor: 'pointer',\n          fill: '#d00',\n          stroke: 'none',\n          transform: `translate(${-SIZE / 2}px,${-SIZE}px)`\n        }}\n        onClick={() => onClick(city)}\n      >\n        <path d={ICON} />\n      </svg>\n    </Marker>\n  ));\n}\n\nexport default React.memo(Pins);\n"]},"metadata":{},"sourceType":"module"}