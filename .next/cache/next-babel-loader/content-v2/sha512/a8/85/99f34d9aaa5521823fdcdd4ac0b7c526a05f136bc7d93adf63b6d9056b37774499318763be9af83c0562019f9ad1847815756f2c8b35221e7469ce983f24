{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/matteosacchi/Dropbox/Il mio Mac (MBP-di-Matteo-3.home)/Documents/GitHub/react-portfolio/components/swiper.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect, useRef } from \"react\";\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y, Mousewheel } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nSwiperCore.use([Navigation, Pagination, A11y, Mousewheel]);\nimport { gsap } from \"gsap\";\nimport { SplitText } from \"gsap/dist/SplitText\";\nexport default function Slideshow({\n  project\n}) {\n  let mainTitleRef = useRef(null);\n  let titleRefs = useRef([]);\n\n  const addToRefs = el => {};\n\n  const slideAnimation = () => {\n    gsap.to(mainTitleRef, 2, {\n      y: -20,\n      autoAlpha: 1\n    });\n  };\n\n  const params = {\n    container: \".container\",\n    pagination: \".swiper-pagination\",\n    direction: \"vertical\",\n    mousewheel: {\n      sensitivity: 5\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Swiper, _objectSpread(_objectSpread({}, params), {}, {\n    slidesPerView: 1,\n    pagination: {\n      clickable: true\n    },\n    onSwiper: swiper => slideAnimation(),\n    onSlideChange: () => slideAnimation(),\n    children: [/*#__PURE__*/_jsxDEV(SwiperSlide, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slide-inner\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          ref: element => {\n            mainTitleRef = element;\n          },\n          children: \"Freelance designer and developer. With a focus on data visualization and creative coding.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), project.map(item => {\n      return /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slide-inner\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            ref: addToRefs,\n            children: item.fields.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this);\n    })]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/matteosacchi/Dropbox/Il mio Mac (MBP-di-Matteo-3.home)/Documents/GitHub/react-portfolio/components/swiper.js"],"names":["useState","useEffect","useRef","SwiperCore","Navigation","Pagination","Scrollbar","A11y","Mousewheel","Swiper","SwiperSlide","use","gsap","SplitText","Slideshow","project","mainTitleRef","titleRefs","addToRefs","el","slideAnimation","to","y","autoAlpha","params","container","pagination","direction","mousewheel","sensitivity","clickable","swiper","element","map","item","fields","title"],"mappings":";;;;;;;;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,EAA6BC,MAA7B,QAA2C,OAA3C;AACA,OAAOC,UAAP,IAAqBC,UAArB,EAAiCC,UAAjC,EAA6CC,SAA7C,EAAwDC,IAAxD,EAA8DC,UAA9D,QAAgF,QAAhF;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,cAApC;AAEAP,UAAU,CAACQ,GAAX,CAAe,CAACP,UAAD,EAAaC,UAAb,EAAyBE,IAAzB,EAA+BC,UAA/B,CAAf;AAEA,SAASI,IAAT,QAAqB,MAArB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAGA,eAAe,SAASC,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAA8B;AAE3C,MAAIC,YAAY,GAAGd,MAAM,CAAC,IAAD,CAAzB;AAEA,MAAIe,SAAS,GAAGf,MAAM,CAAC,EAAD,CAAtB;;AACC,QAAMgB,SAAS,GAAIC,EAAD,IAAO,CAExB,CAFD;;AAID,QAAMC,cAAc,GAAG,MAAM;AAC3BR,IAAAA,IAAI,CAACS,EAAL,CAAQL,YAAR,EAAsB,CAAtB,EAAyB;AAAEM,MAAAA,CAAC,EAAC,CAAC,EAAL;AAASC,MAAAA,SAAS,EAAE;AAApB,KAAzB;AACD,GAFD;;AAIA,QAAMC,MAAM,GAAG;AACbC,IAAAA,SAAS,EAAE,YADE;AAEbC,IAAAA,UAAU,EAAE,oBAFC;AAGbC,IAAAA,SAAS,EAAE,UAHE;AAIbC,IAAAA,UAAU,EAAE;AACVC,MAAAA,WAAW,EAAE;AADH;AAJC,GAAf;AAUA,sBACE,QAAC,MAAD,kCAAYL,MAAZ;AACE,IAAA,aAAa,EAAE,CADjB;AAEE,IAAA,UAAU,EAAE;AAAEM,MAAAA,SAAS,EAAE;AAAb,KAFd;AAGE,IAAA,QAAQ,EAAGC,MAAD,IAAYX,cAAc,EAHtC;AAIE,IAAA,aAAa,EAAE,MAAMA,cAAc,EAJrC;AAAA,4BAME,QAAC,WAAD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACA;AAAI,UAAA,SAAS,EAAC,OAAd;AAAsB,UAAA,GAAG,EAAEY,OAAO,IAAI;AAAChB,YAAAA,YAAY,GAAGgB,OAAf;AAAwB,WAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,EAaKjB,OAAO,CAACkB,GAAR,CAAaC,IAAD,IAAU;AACnB,0BACE,QAAC,WAAD;AAAA,+BACA;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,OAAd;AAAsB,YAAA,GAAG,EAAEhB,SAA3B;AAAA,sBAAuCgB,IAAI,CAACC,MAAL,CAAYC;AAAnD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARF,CAbL;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD","sourcesContent":["import {useState, useEffect, useRef } from \"react\";\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y, Mousewheel } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\nSwiperCore.use([Navigation, Pagination, A11y, Mousewheel]);\n\nimport { gsap } from \"gsap\";\nimport { SplitText } from \"gsap/dist/SplitText\";\n\n\nexport default function Slideshow({project}) {\n\n  let mainTitleRef = useRef(null)\n\n  let titleRefs = useRef([]);\n   const addToRefs = (el) =>{\n\n   }\n\n  const slideAnimation = () => {\n    gsap.to(mainTitleRef, 2, { y:-20, autoAlpha: 1})\n  };\n\n  const params = {\n    container: \".container\",\n    pagination: \".swiper-pagination\",\n    direction: \"vertical\",\n    mousewheel: {\n      sensitivity: 5,\n    }\n  };\n\n\n  return (\n    <Swiper {...params}\n      slidesPerView={1}\n      pagination={{ clickable: true }}\n      onSwiper={(swiper) => slideAnimation()}\n      onSlideChange={() => slideAnimation()}\n    >\n      <SwiperSlide>\n        <div className=\"slide-inner\">\n        <h1 className=\"title\" ref={element => {mainTitleRef = element;}}>Freelance designer and developer.\n        With a focus on data visualization\n        and creative coding.</h1>\n      </div>\n      </SwiperSlide>\n        {project.map((item) => {\n            return (\n              <SwiperSlide>\n              <div className=\"slide-inner\">\n                <h1 className=\"title\" ref={addToRefs}>{item.fields.title}</h1>\n              </div>\n            </SwiperSlide>\n            )\n          })\n        }\n    </Swiper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}