{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/matteosacchi/Documents/GitHub/react-portfolio/components/swiper.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect, useRef } from \"react\";\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y, Mousewheel, EffectFade } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nSwiperCore.use([Navigation, Pagination, A11y, Mousewheel, EffectFade]);\nexport default function Slideshow({\n  project,\n  addToslideShowRef,\n  changeCoord,\n  load,\n  forwardedRef,\n  changeProject,\n  projNavRef,\n  changeProjectFromNav,\n  backSlide\n}) {\n  let titleRefs = useRef([]);\n  titleRefs.current = [];\n\n  const addToRefs = el => {\n    if (el && !titleRefs.current.includes(el)) {\n      titleRefs.current.push(el);\n    }\n  };\n\n  let currentProjRef = useRef([]);\n  currentProjRef.current = [];\n\n  const addToProjRefs = el => {\n    if (el && !currentProjRef.current.includes(el)) {\n      currentProjRef.current.push(el);\n    }\n  };\n\n  useEffect(() => {\n    if (load.load) {\n      initAnimation();\n    }\n  }, [load]);\n\n  const textAnimation = (item, del) => {\n    let tl = gsap.timeline(),\n        mySplitText = new SplitText(item, {\n      type: \"words,chars\",\n      wordsClass: \"split-line\"\n    }),\n        chars = mySplitText.chars;\n    gsap.set(item, {\n      perspective: 400\n    });\n    tl.fromTo(chars, {\n      autoAlpha: 0\n    }, {\n      duration: 1,\n      autoAlpha: 1,\n      ease: \"circ.out\",\n      stagger: 0.03,\n      delay: del\n    }, \"+=0\");\n  };\n\n  const startAnimationNext = () => {\n    titleRefs.current.forEach((item, i) => {\n      if (item.classList.contains(\"active\")) {\n        textAnimation(item, 0);\n      }\n    });\n  };\n\n  const startAnimationPrev = () => {\n    titleRefs.current.forEach((item, i) => {\n      if (item.classList.contains(\"active\")) {\n        textAnimation(item, 0);\n      }\n    });\n  };\n\n  const initAnimation = () => {\n    let item = titleRefs.current[0];\n    gsap.set(item, {\n      opacity: 1\n    });\n    textAnimation(item, 0);\n  };\n\n  const params = {\n    container: \".container\",\n    pagination: \".swiper-pagination\",\n    direction: \"vertical\",\n    slidesPerView: 1,\n    centeredSlides: true,\n    speed: 1000,\n    navigation: {\n      nextEl: '.swiper-button-next',\n      prevEl: '.swiper-button-prev'\n    },\n    effect: \"fade\",\n    fadeEffect: {\n      crossFade: true\n    },\n    mousewheel: {\n      sensitivity: 8,\n      thresholdDelta: 10\n    },\n    watchSlidesProgress: true,\n    keyboard: true\n  };\n  const {\n    0: swiper,\n    1: setSwiper\n  } = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: forwardedRef,\n    className: \"slider-custom-cont\",\n    children: /*#__PURE__*/_jsxDEV(Swiper, _objectSpread(_objectSpread({\n      onSwiper: setSwiper\n    }, params), {}, {\n      pagination: {\n        clickable: true\n      },\n      onSlideNextTransitionStart: () => startAnimationNext(),\n      onSlidePrevTransitionStart: () => startAnimationPrev(),\n      onSlideChangeTransitionStart: () => changeCoord(),\n      children: project.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          children: ({\n            isActive\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: addToslideShowRef,\n            className: \"slide-inner \" + (isActive ? 'active' : ''),\n            lat: item.fields.lat,\n            lon: item.fields.lon,\n            children: item.fields.subtitle ? /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: addToProjRefs,\n              id: item.sys.id,\n              \"data-attr\": item.fields.subtitle,\n              onClick: () => changeProject(item.sys.id),\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                ref: addToRefs,\n                className: \"title \" + (isActive ? 'active' : ''),\n                children: item.fields.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n              ref: addToRefs,\n              className: \"title \" + (isActive ? 'active' : ''),\n              children: item.fields.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)\n        }, item.sys.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this);\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/matteosacchi/Documents/GitHub/react-portfolio/components/swiper.js"],"names":["useState","useEffect","useRef","SwiperCore","Navigation","Pagination","Scrollbar","A11y","Mousewheel","EffectFade","Swiper","SwiperSlide","use","Slideshow","project","addToslideShowRef","changeCoord","load","forwardedRef","changeProject","projNavRef","changeProjectFromNav","backSlide","titleRefs","current","addToRefs","el","includes","push","currentProjRef","addToProjRefs","initAnimation","textAnimation","item","del","tl","gsap","timeline","mySplitText","SplitText","type","wordsClass","chars","set","perspective","fromTo","autoAlpha","duration","ease","stagger","delay","startAnimationNext","forEach","i","classList","contains","startAnimationPrev","opacity","params","container","pagination","direction","slidesPerView","centeredSlides","speed","navigation","nextEl","prevEl","effect","fadeEffect","crossFade","mousewheel","sensitivity","thresholdDelta","watchSlidesProgress","keyboard","swiper","setSwiper","clickable","map","index","isActive","fields","lat","lon","subtitle","sys","id","title"],"mappings":"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","sourcesContent":["import {useState, useEffect, useRef } from \"react\";\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y, Mousewheel, EffectFade } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\nSwiperCore.use([Navigation, Pagination, A11y, Mousewheel, EffectFade]);\n\nexport default function Slideshow({project, addToslideShowRef, changeCoord, load, forwardedRef, changeProject, projNavRef, changeProjectFromNav, backSlide}) {\n\nlet titleRefs = useRef([]);\ntitleRefs.current = [];\nconst addToRefs = (el) =>{\n     if(el && !titleRefs.current.includes(el)){\n       titleRefs.current.push(el);\n     }\n   }\n\nlet currentProjRef = useRef([]);\ncurrentProjRef.current = [];\n\nconst addToProjRefs = (el) =>{\n    if(el && !currentProjRef.current.includes(el)){\n       currentProjRef.current.push(el);\n     }\n  }\n\nuseEffect(()=>{\n    if(load.load){\n      initAnimation();\n    }\n}, [load])\n\nconst textAnimation = (item, del) =>{\n  let tl = gsap.timeline(),\n      mySplitText = new SplitText(item, {type:\"words,chars\", wordsClass: \"split-line\"\n    }),\n    chars = mySplitText.chars;\n    gsap.set(item, {perspective: 400});\n  tl.fromTo(chars, {autoAlpha: 0},\n    {  duration: 1,\n         autoAlpha: 1,\n         ease: \"circ.out\",\n         stagger: 0.03,\n         delay: del\n    },\n    \"+=0\");\n}\n\n\nconst startAnimationNext = () =>{\n    titleRefs.current.forEach((item, i) => {\n      if(item.classList.contains(\"active\")){\n      textAnimation(item, 0);\n      }\n    });\n  }\n\nconst startAnimationPrev = () =>{\n    titleRefs.current.forEach((item, i) => {\n      if(item.classList.contains(\"active\")){\n      textAnimation(item, 0);\n      }\n    });\n  }\n\nconst initAnimation = () =>{\n    let item = titleRefs.current[0]\n    gsap.set(item, {opacity: 1});\n    textAnimation(item, 0);\n  }\n\nconst params = {\n    container: \".container\",\n    pagination: \".swiper-pagination\",\n    direction: \"vertical\",\n    slidesPerView: 1,\n    centeredSlides: true,\n    speed: 1000,\n    navigation: {\n     nextEl: '.swiper-button-next',\n     prevEl: '.swiper-button-prev',\n   },\n    effect: \"fade\",\n    fadeEffect: {\n      crossFade: true\n    },\n    mousewheel: {\n      sensitivity: 8,\n      thresholdDelta: 10,\n    },\n    watchSlidesProgress: true,\n    keyboard: true,\n};\n\n  const [swiper, setSwiper] = useState(null);\n\n\n  return (\n    <div ref={forwardedRef} className=\"slider-custom-cont\">\n    <Swiper onSwiper={setSwiper} {...params}\n      pagination={{ clickable: true }}\n      onSlideNextTransitionStart={() => startAnimationNext()}\n      onSlidePrevTransitionStart={() => startAnimationPrev()}\n      onSlideChangeTransitionStart={() => changeCoord()}\n    >\n        {project.map((item, index) => {\n            return (\n              <SwiperSlide key={item.sys.id}>\n               {({ isActive }) => (\n\n                <div ref={addToslideShowRef} className={\"slide-inner \" + (isActive ? 'active' : '')} lat={item.fields.lat} lon={item.fields.lon}>\n\n                {item.fields.subtitle ? <div ref={addToProjRefs} id={item.sys.id} data-attr={item.fields.subtitle} onClick={()=>changeProject(item.sys.id)}>\n                <h1\n                   ref={addToRefs}\n                   className={\"title \" + (isActive ? 'active' : '')}\n                 >\n                 {item.fields.title}\n                 </h1>\n                </div> : <h1\n                   ref={addToRefs}\n                   className={\"title \" + (isActive ? 'active' : '')}\n                 >\n                 {item.fields.title}\n                 </h1>}\n\n\n\n\n\n              </div>\n              )}\n            </SwiperSlide>\n            )\n          })\n        }\n    </Swiper>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}